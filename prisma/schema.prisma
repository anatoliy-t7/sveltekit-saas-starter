// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum SubscriptionStatus {
  INCOMPLETE
  INCOMPLETE_EXPIRED
  TRIALING
  ACTIVE
  PAST_DUE
  CANCELED
  UNPAID
}

model User {
    id          String   @id @unique
    name        String?
    email       String   @unique
    avatar      String?
    role        String   @default("client")
    email_verified Boolean @default(false)
    active      Boolean @default(true)
    auth_session Session[]
    auth_key     Key[]

    verification_code VerificationCode[]

    plan_id Int?
    plan Plan? @relation(fields: [plan_id], references: [id])

    customer_id String?
    subscription_id String?
    status SubscriptionStatus?

    @@map("user")
}

model Plan {
    id Int @id @default(autoincrement())
    handle String @unique
    name String
    price Int
    price_id String @unique
    users User[]

    @@map("plan")
}

model Session {
    id             String @id @unique
    user_id        String
    active_expires BigInt
    idle_expires   BigInt
    user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("session")
}

model Key {
    id              String  @id @unique
    hashed_password String?
    user_id         String
    user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("auth_key")
}


model VerificationCode {
    id             Int      @id @default(autoincrement())
    expires        BigInt
    code           String
    user_id        String
    attempts       Int      @default(3)
    user           User     @relation(references: [id], fields: [user_id], onDelete: Cascade)

    @@index([user_id])
    @@map("verification_code")
}
